# Generated by Django 3.1 on 2021-02-23 14:39

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('siape', models.CharField(help_text='Requer 7 digitos numéricos.', max_length=7, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[0-9]'), 'Digite um Siape válido!', 'invalid')], verbose_name='Siape')),
                ('cpf', models.CharField(help_text='Digite apenas 11 digitos numéricos.', max_length=11, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[0-9]'), 'Digite um CPF válido!', 'invalid')], verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=20, null=True, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[0-9]'), 'Digite um RG válido!', 'invalid')], verbose_name='RG')),
                ('first_name', models.CharField(max_length=50, verbose_name='Nome')),
                ('last_name', models.CharField(max_length=50, verbose_name='Sobrenome')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='E-mail')),
                ('is_staff', models.BooleanField(default=True, verbose_name='Servidor(a)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Está ativo(a)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado hein')),
                ('last_sign_in_ip', models.CharField(blank=True, max_length=100, null=True, verbose_name='Último IP logado')),
                ('last_sign_in_at', models.DateTimeField(blank=True, null=True, verbose_name='Último acesso em')),
                ('current_sign_in_ip', models.CharField(blank=True, max_length=100, null=True, verbose_name='IP logado atual')),
                ('current_sign_in_at', models.DateTimeField(blank=True, null=True, verbose_name='Acesso atual')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Ingresso em')),
                ('dept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.dept', verbose_name='Campus')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
        ),
        migrations.CreateModel(
            name='FunctionTypeCommitteeUserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('committee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.committee', verbose_name='Comissão')),
                ('function_type_committee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.functiontypecommittee', verbose_name='Função da Comissão')),
            ],
            options={
                'verbose_name': 'Função de Comissão',
                'verbose_name_plural': 'Funções de Comissões',
            },
        ),
        migrations.CreateModel(
            name='JIFProfile',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Descrição do perfil')),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfis',
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='JIFUserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.dept', verbose_name='Campus')),
                ('function_committees', models.ManyToManyField(blank=True, help_text='Este campo serve para informar qual função em determinada comissão é exercida', related_name='function_type_committee', through='userjif.FunctionTypeCommitteeUserProfile', to='core.FunctionTypeCommittee', verbose_name='Função da Comissão')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userjif.jifprofile', verbose_name='Perfil')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Perfil de Usuário',
                'verbose_name_plural': 'Perfis de Usuários',
            },
        ),
        migrations.AddField(
            model_name='functiontypecommitteeuserprofile',
            name='user_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userjif.jifuserprofile', verbose_name='Perfil de Usuário'),
        ),
        migrations.AddField(
            model_name='user',
            name='jif_profiles',
            field=models.ManyToManyField(blank=True, help_text='O perfil é um conjunto de permissões que o usuário pode estar associado', related_name='user', through='userjif.JIFUserProfile', to='userjif.JIFProfile', verbose_name='Perfis'),
        ),
        migrations.AddField(
            model_name='user',
            name='sex',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.sex', verbose_name='Sexo'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
